2024-02-25 01:08:09,967 - Closure_55 - INFO - rm -rf /home/chongchong/d4j-project/Closure_55
2024-02-25 01:08:09,967 - Closure_55 - INFO - 删除 Closure 55b 成功
2024-02-25 01:08:09,967 - Closure_55 - INFO - defects4j checkout -p Closure -v 55b -w /home/chongchong/d4j-project/Closure_55
2024-02-25 01:08:11,927 - Closure_55 - INFO - checkout Closure 55b 成功
2024-02-25 01:08:22,997 - Closure_55 - INFO - 编译成功
2024-02-25 01:09:06,535 - Closure_55 - INFO - 测试失败
2024-02-25 01:09:06,535 - Closure_55 - INFO - Failing tests: 1
  - com.google.javascript.jscomp.FunctionRewriterTest::testIssue538

2024-02-25 01:09:07,549 - Closure_55 - INFO - 它的bug类型为:
2024-02-25 01:09:07,549 - Closure_55 - INFO - 2
2024-02-25 01:09:52,490 - Closure_55 - INFO - 开始验证补丁1 1:
2024-02-25 01:09:52,490 - Closure_55 - INFO - 
return n.isFunction() && !n.isArrowFunction();

2024-02-25 01:09:54,462 - Closure_55 - INFO - 编译失败
2024-02-25 01:09:54,462 - Closure_55 - INFO - 错误: 找不到符号
return n.isFunction() && !n.isArrowFunction();
2024-02-25 01:09:54,462 - Closure_55 - INFO - 补丁1 1 未成功编译
2024-02-25 01:09:54,463 - Closure_55 - INFO - 开始验证补丁1 2:
2024-02-25 01:09:54,463 - Closure_55 - INFO - 
return n.isFunction();

2024-02-25 01:09:56,437 - Closure_55 - INFO - 编译失败
2024-02-25 01:09:56,437 - Closure_55 - INFO - 错误: 找不到符号
return n.isFunction();
2024-02-25 01:09:56,437 - Closure_55 - INFO - 补丁1 2 未成功编译
2024-02-25 01:09:56,439 - Closure_55 - INFO - 开始验证补丁1 3:
2024-02-25 01:09:56,439 - Closure_55 - INFO - 
return n.isFunction() && !n.getFirstChild().isCall();

2024-02-25 01:09:58,401 - Closure_55 - INFO - 编译失败
2024-02-25 01:09:58,401 - Closure_55 - INFO - 错误: 找不到符号
return n.isFunction() && !n.getFirstChild().isCall();
2024-02-25 01:09:58,401 - Closure_55 - INFO - 补丁1 3 未成功编译
2024-02-25 01:09:58,402 - Closure_55 - INFO - 开始验证补丁1 4:
2024-02-25 01:09:58,402 - Closure_55 - INFO - 
return n != null && n.isFunction() && !n.isArrowFunction() && !n.isGeneratorFunction();

2024-02-25 01:10:00,399 - Closure_55 - INFO - 编译失败
2024-02-25 01:10:00,399 - Closure_55 - INFO - 错误: 找不到符号
return n != null && n.isFunction() && !n.isArrowFunction() && !n.isGeneratorFunction();
2024-02-25 01:10:00,399 - Closure_55 - INFO - 补丁1 4 未成功编译
2024-02-25 01:10:00,400 - Closure_55 - INFO - 开始验证补丁1 5:
2024-02-25 01:10:00,400 - Closure_55 - INFO - 
return n != null && n.isFunction() && !NodeUtil.isCall(n);

2024-02-25 01:10:02,398 - Closure_55 - INFO - 编译失败
2024-02-25 01:10:02,398 - Closure_55 - INFO - 错误: 找不到符号
return n != null && n.isFunction() && !NodeUtil.isCall(n);
2024-02-25 01:10:02,399 - Closure_55 - INFO - 补丁1 5 未成功编译
2024-02-25 01:10:02,400 - Closure_55 - INFO - 开始验证补丁1 6:
2024-02-25 01:10:02,400 - Closure_55 - INFO - 
return NodeUtil.isFunctionExpression(n) && !NodeUtil.isCall(n);

2024-02-25 01:10:06,461 - Closure_55 - INFO - 编译成功
2024-02-25 01:10:50,147 - Closure_55 - INFO - 测试失败
2024-02-25 01:10:50,148 - Closure_55 - INFO - Failing tests: 1
  - com.google.javascript.jscomp.FunctionRewriterTest::testIssue538

2024-02-25 01:10:50,658 - Closure_55 - INFO - 选择失败的测试用例为:
2024-02-25 01:10:50,658 - Closure_55 - INFO - com.google.javascript.jscomp.FunctionRewriterTest::testIssue538
2024-02-25 01:10:50,658 - Closure_55 - INFO - 失败的测试代码为:
2024-02-25 01:10:50,658 - Closure_55 - INFO -     checkCompilesToSame(      "/** @constructor */\n" +

2024-02-25 01:10:50,659 - Closure_55 - INFO - 失败信息为:
2024-02-25 01:10:50,659 - Closure_55 - INFO - java.lang.IllegalStateException: Expected function but was call Reference node CALL 4 [free_call: 1] [source_file: testcode]

2024-02-25 01:10:50,659 - Closure_55 - INFO - 补丁1 6测试失败
2024-02-25 01:10:50,659 - Closure_55 - INFO - 开始验证补丁1 7:
2024-02-25 01:10:50,660 - Closure_55 - INFO - 
return n.isFunction() && !n.isCall();

2024-02-25 01:10:52,622 - Closure_55 - INFO - 编译失败
2024-02-25 01:10:52,622 - Closure_55 - INFO - 错误: 找不到符号
return n.isFunction() && !n.isCall();
2024-02-25 01:10:52,622 - Closure_55 - INFO - 补丁1 7 未成功编译
2024-02-25 01:10:52,623 - Closure_55 - INFO - 开始验证补丁1 8:
2024-02-25 01:10:52,623 - Closure_55 - INFO - 
return n.isFunction() && NodeUtil.isFunctionExpression(n);

2024-02-25 01:10:54,593 - Closure_55 - INFO - 编译失败
2024-02-25 01:10:54,593 - Closure_55 - INFO - 错误: 找不到符号
return n.isFunction() && NodeUtil.isFunctionExpression(n);
2024-02-25 01:10:54,593 - Closure_55 - INFO - 补丁1 8 未成功编译
2024-02-25 01:10:54,594 - Closure_55 - INFO - 开始验证补丁1 9:
2024-02-25 01:10:54,594 - Closure_55 - INFO - 
return NodeUtil.isFunction(n) && !n.hasChildren();

2024-02-25 01:10:58,640 - Closure_55 - INFO - 编译成功
2024-02-25 01:11:42,860 - Closure_55 - INFO - 测试失败
2024-02-25 01:11:42,861 - Closure_55 - INFO - Failing tests: 6
  - com.google.javascript.jscomp.FunctionRewriterTest::testReplaceIdentityFunction1
  - com.google.javascript.jscomp.FunctionRewriterTest::testReplaceReturnConst1
  - com.google.javascript.jscomp.FunctionRewriterTest::testReplaceReturnConst3
  - com.google.javascript.jscomp.FunctionRewriterTest::testReplaceGetter1
  - com.google.javascript.jscomp.FunctionRewriterTest::testReplaceSetter1
  - com.google.javascript.jscomp.FunctionRewriterTest::testReplaceSetter2

2024-02-25 01:11:43,371 - Closure_55 - INFO - 选择失败的测试用例为:
2024-02-25 01:11:43,371 - Closure_55 - INFO - com.google.javascript.jscomp.FunctionRewriterTest::testReplaceIdentityFunction1
2024-02-25 01:11:43,371 - Closure_55 - INFO - 失败的测试代码为:
2024-02-25 01:11:43,371 - Closure_55 - INFO -     checkCompilesTo(source,

2024-02-25 01:11:43,371 - Closure_55 - INFO - 失败信息为:
2024-02-25 01:11:43,371 - Closure_55 - INFO - junit.framework.AssertionFailedError: 

2024-02-25 01:11:43,371 - Closure_55 - INFO - 补丁1 9测试失败
2024-02-25 01:11:43,372 - Closure_55 - INFO - 开始验证补丁2 1:
2024-02-25 01:11:43,372 - Closure_55 - INFO - 
   return n.isFunction() && !n.isArrowFunction() && !n.isGeneratorFunction() && !n.isAsyncFunction();

2024-02-25 01:11:45,355 - Closure_55 - INFO - 编译失败
2024-02-25 01:11:45,355 - Closure_55 - INFO - 错误: 找不到符号
return n.isFunction() && !n.isArrowFunction() && !n.isGeneratorFunction() && !n.isAsyncFunction();
2024-02-25 01:11:45,355 - Closure_55 - INFO - 补丁2 1 未成功编译
2024-02-25 01:11:45,356 - Closure_55 - INFO - 开始验证补丁2 2:
2024-02-25 01:11:45,356 - Closure_55 - INFO - 
   return n.isFunction() && n.getFirstChild().isName() && !n.isArrowFunction();

2024-02-25 01:11:47,319 - Closure_55 - INFO - 编译失败
2024-02-25 01:11:47,319 - Closure_55 - INFO - 错误: 找不到符号
return n.isFunction() && n.getFirstChild().isName() && !n.isArrowFunction();
2024-02-25 01:11:47,319 - Closure_55 - INFO - 补丁2 2 未成功编译
2024-02-25 01:11:47,320 - Closure_55 - INFO - 开始验证补丁2 3:
2024-02-25 01:11:47,320 - Closure_55 - INFO - 
   return n.isFunction() && n.getFirstChild().isName();

2024-02-25 01:11:49,269 - Closure_55 - INFO - 编译失败
2024-02-25 01:11:49,269 - Closure_55 - INFO - 错误: 找不到符号
return n.isFunction() && n.getFirstChild().isName();
2024-02-25 01:11:49,269 - Closure_55 - INFO - 补丁2 3 未成功编译
2024-02-25 01:11:49,270 - Closure_55 - INFO - 开始验证补丁2 4:
2024-02-25 01:11:49,270 - Closure_55 - INFO - 
  return NodeUtil.isFunction(n) && !n.isArrowFunction() && !n.isGeneratorFunction();

2024-02-25 01:11:51,225 - Closure_55 - INFO - 编译失败
2024-02-25 01:11:51,225 - Closure_55 - INFO - 错误: 找不到符号
return NodeUtil.isFunction(n) && !n.isArrowFunction() && !n.isGeneratorFunction();
2024-02-25 01:11:51,225 - Closure_55 - INFO - 补丁2 4 未成功编译
2024-02-25 01:11:51,226 - Closure_55 - INFO - 开始验证补丁2 5:
2024-02-25 01:11:51,226 - Closure_55 - INFO - 
  return n.isFunction() && !n.getFirstChild().isCall();

2024-02-25 01:11:53,279 - Closure_55 - INFO - 编译失败
2024-02-25 01:11:53,279 - Closure_55 - INFO - 错误: 找不到符号
return n.isFunction() && !n.getFirstChild().isCall();
2024-02-25 01:11:53,279 - Closure_55 - INFO - 补丁2 5 未成功编译
2024-02-25 01:11:53,280 - Closure_55 - INFO - 开始验证补丁2 6:
2024-02-25 01:11:53,280 - Closure_55 - INFO - 
  return NodeUtil.isFunction(n) && !n.getFirstChild().getString().equals("CALL");

2024-02-25 01:11:57,296 - Closure_55 - INFO - 编译成功
2024-02-25 01:12:40,599 - Closure_55 - INFO - 测试失败
2024-02-25 01:12:40,600 - Closure_55 - INFO - Failing tests: 1
  - com.google.javascript.jscomp.FunctionRewriterTest::testIssue538

2024-02-25 01:12:41,112 - Closure_55 - INFO - 选择失败的测试用例为:
2024-02-25 01:12:41,112 - Closure_55 - INFO - com.google.javascript.jscomp.FunctionRewriterTest::testIssue538
2024-02-25 01:12:41,112 - Closure_55 - INFO - 失败的测试代码为:
2024-02-25 01:12:41,113 - Closure_55 - INFO -     checkCompilesToSame(      "/** @constructor */\n" +

2024-02-25 01:12:41,113 - Closure_55 - INFO - 失败信息为:
2024-02-25 01:12:41,113 - Closure_55 - INFO - java.lang.IllegalStateException: Expected function but was call Reference node CALL 4 [free_call: 1] [source_file: testcode]

2024-02-25 01:12:41,113 - Closure_55 - INFO - 补丁2 6测试失败
2024-02-25 01:12:41,114 - Closure_55 - INFO - 开始验证补丁2 7:
2024-02-25 01:12:41,114 - Closure_55 - INFO - 
    return n.isFunction() && !n.isArrowFunction() && !NodeUtil.isCallOrNewTarget(n);

2024-02-25 01:12:43,091 - Closure_55 - INFO - 编译失败
2024-02-25 01:12:43,091 - Closure_55 - INFO - 错误: 找不到符号
return n.isFunction() && !n.isArrowFunction() && !NodeUtil.isCallOrNewTarget(n);
2024-02-25 01:12:43,091 - Closure_55 - INFO - 补丁2 7 未成功编译
2024-02-25 01:12:43,092 - Closure_55 - INFO - 开始验证补丁2 8:
2024-02-25 01:12:43,092 - Closure_55 - INFO - 
    return n.isFunction() && !n.isArrowFunction() && n.getParent().isCall();

2024-02-25 01:12:45,057 - Closure_55 - INFO - 编译失败
2024-02-25 01:12:45,057 - Closure_55 - INFO - 错误: 找不到符号
return n.isFunction() && !n.isArrowFunction() && n.getParent().isCall();
2024-02-25 01:12:45,057 - Closure_55 - INFO - 补丁2 8 未成功编译
2024-02-25 01:12:45,058 - Closure_55 - INFO - 开始验证补丁2 9:
2024-02-25 01:12:45,058 - Closure_55 - INFO - 
    return n.isFunction() && n.getFirstChild().isName() && !n.isArrowFunction();

2024-02-25 01:12:47,036 - Closure_55 - INFO - 编译失败
2024-02-25 01:12:47,036 - Closure_55 - INFO - 错误: 找不到符号
return n.isFunction() && n.getFirstChild().isName() && !n.isArrowFunction();
2024-02-25 01:12:47,036 - Closure_55 - INFO - 补丁2 9 未成功编译
2024-02-25 01:12:47,037 - Closure_55 - INFO - 开始验证补丁3 1:
2024-02-25 01:12:47,037 - Closure_55 - INFO - 
private static boolean isReduceableFunctionExpression(Node n) {
  return n.isFunction() && NodeUtil.isFunctionExpression(n);
}

2024-02-25 01:12:48,791 - Closure_55 - INFO - 编译失败
2024-02-25 01:12:48,791 - Closure_55 - INFO - 错误: 非法的表达式开始
private static boolean isReduceableFunctionExpression(Node n) {
2024-02-25 01:12:48,791 - Closure_55 - INFO - 补丁3 1 未成功编译
2024-02-25 01:12:48,792 - Closure_55 - INFO - 开始验证补丁3 2:
2024-02-25 01:12:48,792 - Closure_55 - INFO - 
private static boolean isReduceableFunctionExpression(Node n) {
  return !n.isCall() && NodeUtil.isFunctionExpression(n);
}

2024-02-25 01:12:50,563 - Closure_55 - INFO - 编译失败
2024-02-25 01:12:50,563 - Closure_55 - INFO - 错误: 非法的表达式开始
private static boolean isReduceableFunctionExpression(Node n) {
2024-02-25 01:12:50,563 - Closure_55 - INFO - 补丁3 2 未成功编译
2024-02-25 01:12:50,564 - Closure_55 - INFO - 开始验证补丁3 3:
2024-02-25 01:12:50,564 - Closure_55 - INFO - 
private static boolean isReduceableFunctionExpression(Node n) {
  return n.isFunction();
}

2024-02-25 01:12:52,338 - Closure_55 - INFO - 编译失败
2024-02-25 01:12:52,338 - Closure_55 - INFO - 错误: 非法的表达式开始
private static boolean isReduceableFunctionExpression(Node n) {
2024-02-25 01:12:52,338 - Closure_55 - INFO - 补丁3 3 未成功编译
2024-02-25 01:12:52,340 - Closure_55 - INFO - 开始验证补丁3 4:
2024-02-25 01:12:52,340 - Closure_55 - INFO - 
private static boolean isReduceableFunctionExpression(Node n) {
  return n.isFunction() && NodeUtil.isFunctionExpression(n);
}

2024-02-25 01:12:52,340 - Closure_55 - INFO - 补丁3 4为重复的补丁
2024-02-25 01:12:52,341 - Closure_55 - INFO - 开始验证补丁3 5:
2024-02-25 01:12:52,341 - Closure_55 - INFO - 
private static boolean isReduceableFunctionExpression(Node n) {
  return n.isFunction() && !n.isCall();
}

2024-02-25 01:12:54,114 - Closure_55 - INFO - 编译失败
2024-02-25 01:12:54,114 - Closure_55 - INFO - 错误: 非法的表达式开始
private static boolean isReduceableFunctionExpression(Node n) {
2024-02-25 01:12:54,114 - Closure_55 - INFO - 补丁3 5 未成功编译
2024-02-25 01:12:54,115 - Closure_55 - INFO - 开始验证补丁3 6:
2024-02-25 01:12:54,115 - Closure_55 - INFO - 
private static boolean isReduceableFunctionExpression(Node n) {
  return n.getToken() == Token.FUNCTION;
}

2024-02-25 01:12:55,920 - Closure_55 - INFO - 编译失败
2024-02-25 01:12:55,920 - Closure_55 - INFO - 错误: 非法的表达式开始
private static boolean isReduceableFunctionExpression(Node n) {
2024-02-25 01:12:55,920 - Closure_55 - INFO - 补丁3 6 未成功编译
2024-02-25 01:12:55,922 - Closure_55 - INFO - 开始验证补丁3 7:
2024-02-25 01:12:55,922 - Closure_55 - INFO - 
private static boolean isReduceableFunctionExpression(Node n) {
  return n.isFunction() && !n.isCall();
}

2024-02-25 01:12:55,922 - Closure_55 - INFO - 补丁3 7为重复的补丁
2024-02-25 01:12:55,922 - Closure_55 - INFO - 开始验证补丁3 8:
2024-02-25 01:12:55,922 - Closure_55 - INFO - 
private static boolean isReduceableFunctionExpression(Node n) {
  return n.isFunction() && NodeUtil.isFunctionExpression(n);
}

2024-02-25 01:12:55,922 - Closure_55 - INFO - 补丁3 8为重复的补丁
2024-02-25 01:12:55,923 - Closure_55 - INFO - 开始验证补丁3 9:
2024-02-25 01:12:55,923 - Closure_55 - INFO - 
private static boolean isReduceableFunctionExpression(Node n) {
  return n.isFunction() && NodeUtil.isFunctionExpression(n) && !n.hasChildren();
}

2024-02-25 01:12:57,689 - Closure_55 - INFO - 编译失败
2024-02-25 01:12:57,689 - Closure_55 - INFO - 错误: 非法的表达式开始
private static boolean isReduceableFunctionExpression(Node n) {
2024-02-25 01:12:57,689 - Closure_55 - INFO - 补丁3 9 未成功编译
2024-02-25 01:12:57,689 - Closure_55 - INFO - Closure_55 未成功修复
